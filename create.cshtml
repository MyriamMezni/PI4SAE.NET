@model Webtuto.Models.Products

@{
    ViewBag.Title = "create";
}

<h2>create</h2>


@using (Html.BeginForm("Create", "Products", FormMethod.Post,
new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Products</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.quantite, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.quantite, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.quantite, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.couleur, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.couleur, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.couleur, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.nomProd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nomProd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nomProd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.prix, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.prix, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.prix, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.category, htmlAttributes: new
        {
            @class =
            "control-label col-md-2"
        })
        <div class="col-md-10">
            @Html.DropDownList("categoryList", (SelectList)ViewData["categoryList"])
            @Html.ValidationMessageFor(model => model.category)
        </div>
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.image)
        <div class="editor-field">
            @Html.TextBox("file", "", new { type = "file" })
            @Html.ValidationMessageFor(model => model.image)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
